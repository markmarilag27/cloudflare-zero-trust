# https://docs.docker.com/compose/compose-file/compose-file-v3/
version: '3.8'
# Services
services:

    # APP
    app:
        build:
            context: ./.docker
            dockerfile: Dockerfile
        image: markmarilag27/php-nginx:8.2
        container_name: app
        restart: unless-stopped
        tty: true
        depends_on:
            - mysql
            - redis
            - mailhog
        ports:
            - 80:80
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            - XDEBUG_SESSION=${XDEBUG_SESSION:-0}
            - XDEBUG_CONFIG=${XDEBUG_CONFIG:-client_host=host.docker.internal}
        volumes:
            - ./:/var/www/html
            - ./.docker/nginx.conf:/etc/nginx/conf.d/default.conf
            - ./.docker/supervisord.conf:/etc/supervisor/conf.d/supervisord.conf
            - ./.docker/fpm-pool.conf:/etc/php/8.2/fpm/pool.d/www.conf
            - ./.docker/php.ini:/etc/php/8.2/fpm/conf.d/99-php.ini
            - ./.docker/xdebug.ini:/etc/php/8.2/cli/conf.d/20-xdebug.ini
        networks:
            - default
        extra_hosts:
            - host.docker.internal:host-gateway

    # Database
    mysql:
        image: mysql:8.0
        container_name: mysql
        restart: unless-stopped
        ports:
            - ${DB_PORT:-3306}:3306
        environment:
            MYSQL_DATABASE: laravel
            MYSQL_USER: laravel
            MYSQL_PASSWORD: laravel
            MYSQL_ROOT_PASSWORD: laravel
        volumes:
            - mysql-data:/var/lib/mysql/
        networks:
            - default

    # Redis
    redis:
        image: redis:alpine
        container_name: redis
        ports:
            - 6379:6379
        volumes:
            - redis-data:/data
        networks:
            - default

    # Mail
    mailhog:
        image: mailhog/mailhog
        container_name: mailhog
        restart: unless-stopped
        ports:
            - ${MAIL_PORT:-1025}:1025
            - 8025:8025
        networks:
            - default

# Networks
networks:
    default:
        driver: bridge

# Volumes
volumes:
    mysql-data:
        driver: local
    redis-data:
        driver: local
